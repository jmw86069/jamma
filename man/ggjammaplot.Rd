% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamma-ggjammaplot.R
\name{ggjammaplot}
\alias{ggjammaplot}
\title{MA-plots using ggplot2}
\usage{
ggjammaplot(
  x,
  nbin_factor = 1,
  bw_factor = 1,
  assay_name = 1,
  useMedian = FALSE,
  controlSamples = NULL,
  centerGroups = NULL,
  groupedX = TRUE,
  grouped_mad = TRUE,
  outlierMAD = 5,
  mad_row_min = 4,
  displayMAD = FALSE,
  noise_floor = 1e-10,
  noise_floor_value = NA,
  naValue = NA,
  centerFunc = centerGeneData,
  whichSamples = NULL,
  useRank = FALSE,
  titleBoxColor = "lightgoldenrod1",
  outlierColor = "palegoldenrod",
  maintitle = NULL,
  subtitle = NULL,
  summary = "mean",
  difference = "difference",
  transFactor = 0.2,
  doPlot = TRUE,
  highlightPoints = NULL,
  highlightPch = 21,
  highlightCex = 1.5,
  highlightColor = NULL,
  doHighlightLegend = TRUE,
  ablineH = c(-2, 0, 2),
  base_size = 12,
  panel.grid.major.colour = "grey90",
  panel.grid.minor.colour = "grey95",
  return_type = c("ggplot", "data"),
  xlim = NULL,
  ylim = c(-6, 6),
  ncol = NULL,
  nrow = NULL,
  blankPlotPos = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{one of the following inputs:
\itemize{
\item \code{numeric} matrix
\item \code{SummarizedExperiment} object, where the
assay data is defined using \code{assays(x)[[assay_name]]}. Accordingly,
\code{assay_name} can be either an integer index or \code{character} string
matching the \code{names(assays(x))}.
\item \code{list} output from \code{jammacalc()} or \code{jammaplot()}, where each
element in the list is a two-column \code{matrix} with colnames \code{c("x", "y")}.
}}

\item{nbin_factor}{\code{numeric} value used to adjust the number of bins
used to display the MA-plots, where values higher than \code{1} increase
the resolution and level of detail, and values below \code{1} decrease
the resolution. Note the number of bins are already adjusted based
upon the square root of the number of plot panels, and \code{nbin_factor}
applied to that value.}

\item{bw_factor}{\code{numeric} used to adjust the resolution of the
2-dimensional bandwidth calculation, where higher values create
more detailed density, and lower values create a smoother density
across the range of data.}

\item{assay_name}{relevant only when \code{x} is \code{SummarizedExperiment},
one of these input types:
\itemize{
\item \code{character} string that matches \code{names(assays(x))}
\item \code{integer} index for \code{assays(x)}, where any value higher than
\code{length(assays(x))} is adjusted to \code{length(assays(x))}, which makes
it convenient to select the last element in the list of \code{assays(x)}
by using \code{assay_name = Inf}.
}}

\item{useMedian}{\code{logical} indicating whether calculations should use
\code{median}, or when \code{useMedian=FALSE} the \code{mean} is used. The median
has the benefit of reducing effect of outliers, however the mean
has the advantage that it represents data consistent with most
parametric statistical analyses.}

\item{controlSamples}{\code{character} vector of \code{colnames(x)} to use as
the control when calculating centered data. By default, all samples
are used, so the classic MA-plot is the value of each sample,
subtracting the median or mean value calculated across all samples.
It is sometimes useful to define a subset of known samples for this
calculation, which can be beneficial in avoiding outliers, or for
consistency by selecting high quality control samples.}

\item{centerGroups}{\code{character} vector with length equal to \code{ncol(x)},
which defines subgroups of \code{colnames(x)} to be treated independently
during the MA-plot calculation.}

\item{groupedX}{\code{logical} indicating whether the x-axis value, which
represents the median or mean value, should be calculated independently
for each group when \code{centerGroups} is used with multiple groups.
Typically \code{groupedX=TRUE} is recommended, however it can be beneficial
to share an overall x-axis value in specific circumstances.}

\item{grouped_mad}{\code{logical} indicating whether the MAD factor calculation
of variability among samples should be performed independently
for each group when \code{centerGroups} is used with multiple groups.
Typically \code{grouped_max=TRUE} is recommended, however it can be beneficial
to share an overall MAD factor threshold across all samples
in specific circumstances.}

\item{outlierMAD}{\code{numeric} indicating the MAD factor threshold above
which a particular sample is considered an outlier.}

\item{mad_row_min}{\code{numeric} value indicating the minimum x-axis
value, calculated using either median or mean as defined by
argument \code{useMedian}, at or above which a measurement is used in the
MAD factor calculation. This threshold is useful to restrict the
MAD variability calculation to measurements (rows in \code{x}) with
signal that meets a minimum noise threshold.}

\item{displayMAD}{\code{logical} indicating whether to display the MAD factor
in the bottom right corner of each MA-plot panel.}

\item{noise_floor}{\code{numeric} value indicating the minimum numeric value,
below which the value is converted to \code{noise_floor_value}. Typically
this threshold is useful to convert values \code{0} into \code{NA} so they will
not be used in the MA-plots nor the associated calculations. It is
also useful to establish a noise floor above zero, for example
in QPCR if noise threshold for calculated expression is roughly 50,
a useful noise floor might be \code{noise_floor=log2(50)} and
\code{noise_floor_value=log2(50)}, which will set any expression value
at or below \code{log2(50)} to that value. It prevents noise from becoming
meaningful, when it may be just instrument noise with no relevance.
Those values could also reasonably be converted to \code{NA} for this
purpose.}

\item{naValue}{\code{character} string used to convert values of \code{NA} to
something else. This argument is useful when a numeric matrix may
contain \code{NA} values but would prefer them to be, for example, \code{0}.}

\item{centerFunc}{\code{function} used to supply a custom data centering
function. In practice this argument should rarely be changed.}

\item{whichSamples}{\code{integer} index of samples in \code{colnames(x)} to be
plotted, however all samples in \code{colnames(x)} will be used for the
MA-plot calculations and data centering. This argument is intended
to help zoom in to inspect a specific subset of samples, without
having to plot all samples in \code{x}.}

\item{useRank}{\code{logical} indicating whether to plot rank on the x-axis,
rank-difference on the y-axis for each sample. This transformation
is rather useful, especially when downstream analysis tools may
also refer to the rank value of particular measurements.}

\item{titleBoxColor}{\code{character} vector of R colors, where
\code{titleBoxColor} is equal to \code{ncol(x)}, or where
\code{names(titleBoxColor)} matches \code{colnames(x)}. When supplied, each
plot panel strip background will be colored accordingly.}
}
\description{
MA-plots using ggplot2
}
\details{
This method is under active development and may change as
features are implemented.

It is currently fully functional and is being documented.
}
\examples{
if (jamba::check_pkg_installed("SummarizedExperiment") &&
   jamba::check_pkg_installed("farrisdata")) {
   suppressPackageStartupMessages(require(SummarizedExperiment));

   GeneSE <- farrisdata::farrisGeneSE;

   titleBoxColor <- jamba::nameVector(
      farrisdata::colorSub[as.character(colData(GeneSE)$groupName)],
      colnames(GeneSE));
   options("warn"=FALSE);

   gg <- ggjammaplot(GeneSE,
      ncol=6,
      base_size=12,
      assay_name="raw_counts")

   gg <- ggjammaplot(GeneSE,
      ncol=6,
      assay_name="counts",
      useRank=TRUE,
      ylim=c(-11000, 11000),
      maintitle="MA-plots by rank and rank difference",
      titleBoxColor=titleBoxColor)

   gg <- ggjammaplot(GeneSE,
      ncol=6,
      assay_name="counts",
      titleBoxColor=titleBoxColor,
      base_size=10,
      maintitle="MA-plots showing MAD factor",
      displayMAD=TRUE)

   gg <- ggjammaplot(GeneSE,
      ncol=6,
      assay_name="counts",
      titleBoxColor=titleBoxColor,
      maintitle="MA-plot omitting one panel, then using blankPlotPos",
      whichSamples=colnames(GeneSE)[c(1:21, 23:24)],
      blankPlotPos=22,
      displayMAD=TRUE)

   if (FALSE) {
   ggdf <- ggjammaplot(GeneSE,
      assay_name="counts",
      whichSamples=c(1:3, 7:9),
      return_type="data",
      titleBoxColor=titleBoxColor)
   highlightPoints1 <- names(jamba::tcount(subset(ggdf, mean > 15 & difference < -1)$item, 2))
   highlightPoints2 <- subset(ggdf, name \%in\% "CA1CB492" &
      difference < -4.5)$item;
   highlightPoints <- list(
      divergent=highlightPoints1,
      low_CA1CB492=highlightPoints2);

   ggdf_h <- ggjammaplot(GeneSE,
      assay_name="counts",
      highlightPoints=highlightPoints,
      whichSamples=c(1:3, 7:9),
      return_type="data",
      titleBoxColor=titleBoxColor)

   # you can use output from `jammaplot()` as input to `ggjammaplot()`:
   jp2 <- jammaplot(GeneSE,
      outlierMAD=2,
      doPlot=FALSE,
      assay_name="raw_counts",
      filterFloor=1e-10,
      filterFloorReplacement=NA,
      centerGroups=colData(GeneSE)$Compartment,
      subtitleBoxColor=farrisdata::colorSub[as.character(colData(GeneSE)$Compartment)],
      useRank=FALSE);

   gg1 <- ggjammaplot(jp2,
      ncol=6,
      titleBoxColor=titleBoxColor);
   print(gg1);
   }
}

}
\seealso{
Other jam plot functions: 
\code{\link{jammaplot}()}
}
\concept{jam plot functions}
