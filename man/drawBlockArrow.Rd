% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamma-volcano.R
\name{drawBlockArrow}
\alias{drawBlockArrow}
\title{Draw block arrows onto a figure}
\usage{
drawBlockArrow(fromX = NULL, toX = NULL, fromY = NULL, toY = NULL,
  location = NULL, col = "#660000FF", border = "#000000FF",
  arrowLabel = "", arrowLabelCex = 1, arrowLabelFont = 1,
  arrowLabelColor = "white", arrowLabelSrt = 0, flipLabelSrt = TRUE,
  arrowLengthPercent = 4, arrowWidthPercent = 10,
  doShadowTextArrows = TRUE, blockWidthPercent = 4,
  arrowSizeRelativeTo = c("plot", "length"), doBlockGradient = TRUE,
  nGradientSteps = 20, gradientWtFactor = 1/2, lwd = 1, parUsr = NULL,
  parPin = NULL, xpd = TRUE, add = TRUE, verbose = FALSE,
  doTest = FALSE, ...)
}
\arguments{
\item{fromX, toX, fromY, toY}{coordinates defining the start and end
coordinates for the blockArrow. Currently these values are not
vectorized, which means only one block arrow is drawn per function
call.}

\item{location}{NULL or character string indicating whether the block
arrow should be placed outside plot space in the axis margins.
Allowed values are 'top', 'bottom', 'left', and 'right'. When one of
those substrings is detected, the corresponding fromX,toX, or fromY,toY
are fixed to the appropriate margin coordinates.}

\item{col}{vector of one or more R colors, used to color the block arrow.
If one color is supplied, and \code{doBlockGradient=TRUE} then it is
expanded into a color gradient using \code{\link{color2gradient}}.
If multiple values are supplied, then \code{\link{colorRampPalette}} is
used to expand colors to \code{nGradientSteps}.}

\item{border}{single R color used as a border around the block arrow.
Supply "transparent" to suppress the border.}

\item{arrowLabel}{character string with a label to print inside the block
arrow. Note: text is not scaled to fit the block arrow, it is simply
placed at the center.}

\item{arrowLabelCex, arrowLabelFont, arrowLabelColor, arrowLabelSrt}{parameters
controlling the label text.}

\item{flipLabelSrt}{logical whether to ensure the arrow label is upright,
regardless the angle of the arrow. Otherwise text will flow from the stem
to the arrow head, which may cause text to appear upside down.}

\item{arrowLengthPercent, arrowWidthPercent, blockWidthPercent}{parameters
used to define the shape of the arrow. The parameter
\code{arrowSizeRelativeTo} determines how these values are calculated.}

\item{doShadowTextArrows}{logical whether to render the arrow label using
\code{\link{shadowText}} which provides an outline to each letter.}

\item{arrowSizeRelativeTo}{character value, either 'plot' or 'length', which
helps define relative scaling of the block arrow. The 'plot' scaling
ensures that multiple block arrows share common reference, being the
size of the plot itself. However 'length' will allow custom sizing of
the arrow head for short arrows, for example.}

\item{doBlockGradient}{logical whether to create a color gradient to
fill the block arrow.}

\item{nGradientSteps}{integer number of colors used when
\code{doBlockGradient=TRUE}.}

\item{gradientWtFactor}{when supplying one color for \code{col}, and
\code{doBlockGradient=TRUE}, the \code{\link{color2gradient}} function
is used to create a color ramp. The gradient width can be controlled with
gradientWtFactor, where a value 1 or higher is a dramatic gradient, but
values below 1 are more subtle.}

\item{lwd}{line width used for block arrow border}

\item{parUsr, parPin}{values derived from \code{par("usr")} and
\code{par("pin")}, supplied here in the rare case that a custom
range should be supplied.}

\item{xpd, add}{parameters controlling plot features. The \code{par("xpd")}
value controls clipping block arrows when they are outside the plot area,
and \code{add} controls whether arrows are added to an existing plot,
are used to create a new plot.}

\item{verbose}{logical whether to print verbose output.}

\item{doTest}{logical whether to perform a short test to demonstrate
the capabilities of this function.}
}
\description{
Draw block arrows onto a figure
}
\examples{
drawBlockArrow(doTest=TRUE);
drawBlockArrow(fromX=20, toX=80, fromY=1500, toY=1500,
   col="blue4", arrowLabel="Blue block arrow")

}
