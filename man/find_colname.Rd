% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam-find-colname.R
\name{find_colname}
\alias{find_colname}
\title{Find colname by string or pattern}
\usage{
find_colname(
  pattern,
  x,
  max = 1,
  index = FALSE,
  require_non_na = TRUE,
  col_types = NULL,
  exclude_pattern = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{pattern}{\code{character} vector of text strings and/or regular
expression patterns.}

\item{x}{\code{data.frame} or other object that contains \code{colnames(x)}.}

\item{max}{\code{integer} maximum number of entries to return.}

\item{index}{\code{logical} indicating whether to return the column index,
that is the column number.}

\item{require_non_na}{\code{logical} indicating whether to require at
least one non-\code{NA} value in the matching colname. When
\code{require_non_na=TRUE} and all values in a column are \code{NA},
that colname is not returned by this function.}

\item{exclude_pattern}{\code{character} vector of colnames or patterns
to exclude from returned results.}

\item{verbose}{\code{logical} indicating whether to print verbose output.}

\item{...}{additional arguments are ignored.}
}
\description{
Find colname by string or pattern, with option to require non-NA values.
}
\details{
This function is a simple utility function intended to help
find the most appropriate matching colname given one or more
character strings or patterns.

It returns the first best matching result, but can return
multiple results in order of preference if \code{max=Inf}.

The order of matching:
\enumerate{
\item Match the exact colname.
\item Match case-insensitive colname.
\item Match the beginning of each colname.
\item Match the end of each colname.
\item Match anywhere in each colname.
}

The goal is to use something like \code{c("p.value", "pvalue", "pval")}
and be able to find colnames with these variations:
\itemize{
\item \code{P.Value}
\item \verb{P.Value Group-Control}
\item \verb{Group-Control P.Value}
\item \code{pvalue}
}

Even if the data contains \code{c("P.Value", "adj.P.Val")} as returned
by \code{limma::topTable()} for example, the pattern \code{c("p.val")} will
preferentially match \code{"P.Value"} and not \code{"adj.P.Val"}.
}
\examples{
x <- data.frame(
   `Gene`=paste0("gene", LETTERS[1:25]),
   `log2fold Group-Control`=rnorm(25)*2,
   `P.Value Group-Control`=10^-rnorm(25)^2,
   check.names=FALSE);
x[["fold Group-Control"]] <- log2fold_to_fold(x[["log2fold Group-Control"]]);
x[["adj.P.Val Group-Control"]] <- x[["P.Value Group-Control"]];

print(head(x));
find_colname(c("p.val", "pval"), x);
find_colname(c("fold", "fc", "ratio"), x);
find_colname(c("logfold", "log2fold", "lfc", "log2ratio", "logratio"), x);

## use exclude_pattern
## if the input data has no "P.Value" but has "adj.P.Val"
y <- x[,c(1,2,4,5)];
print(head(y));
find_colname(c("p.val"), y, exclude_pattern=c("adj"))

}
\seealso{
Other jam utility functions: 
\code{\link{blockArrowMargin}()},
\code{\link{fold_to_log2fold}()},
\code{\link{get_se_assaydata}()},
\code{\link{get_se_colData}()},
\code{\link{gradient_rect}()},
\code{\link{handle_highlightPoints}()},
\code{\link{log2fold_to_fold}()},
\code{\link{logAxis}()},
\code{\link{outer_legend}()},
\code{\link{points2polygonHull}()},
\code{\link{update_function_params}()},
\code{\link{update_list_elements}()}
}
\concept{jam utility functions}
