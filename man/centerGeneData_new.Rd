% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamma.r
\name{centerGeneData_new}
\alias{centerGeneData_new}
\title{Center gene data (modified)}
\usage{
centerGeneData_new(x, centerGroups = NULL, na.rm = TRUE,
  controlSamples = NULL, useMedian = TRUE, rmOutliers = FALSE,
  madFactor = 5, rowStatsFunc = NULL, returnGroupedValues = FALSE,
  returnGroups = FALSE, verbose = FALSE, ...)
}
\arguments{
\item{x}{numeric matrix of input data. See assumptions,
that data is assumed to be log2-transformed, or otherwise
appropriately transformed.}

\item{centerGroups}{character vector of group names, or
\code{NULL} if there are no groups.}

\item{na.rm}{logical indicating whether NA values should be
ignored for summary statistics. This argument is passed
to the corresponding row stats function.}

\item{controlSamples}{character vector of values in \code{colnames(x)}
which defines the columns to use when calculating group
summary values.}

\item{useMedian}{logical indicating whether to use group median
values when calculating summary statistics (\code{TRUE}), or
group means (\code{FALSE}). In either case, when \code{rowStatsFunc}
is provided, it is used instead.}

\item{rmOutliers}{logical indicating whether to perform outlier
detection and removal prior to row group stats. This
argument is passed to \code{jamba::rowGroupMeans()}. Note that
outliers are only removed during the row group summary step,
and not in the centered data.}

\item{madFactor}{numeric value passed to \code{jamba::rowGroupMeans()},
indicating the MAD factor threshold to use when \code{rmOutliers=TRUE}.
The MAD of each row group is computed, the overall group median
MAD is used to define 1x MAD factor, and any MAD more than
\code{madFactor} times the group median MAD is considered an outlier
and is removed. The remaining data is used to compute row
group values.}

\item{rowStatsFunc}{optional function used to calculate row group
summary values. This function should take a numeric matrix as
input, and return a one-column numeric matrix as output, or
a numeric vector with length \code{nrow(x)}. The function should
also accept \code{na.rm} as an argument.}

\item{returnGroupedValues}{logical indicating whether to include
the numeric matrix of row group values used during centering,
returned in the attributes with name \code{"x_group"}.}

\item{returnGroups}{logical indicating whether to return the
centering summary data.frame in attributes with name "center_df".}

\item{verbose}{logical indicating whether to print verbose output.}

\item{...}{additional arguments are passed to \code{jamba::rowGroupMeans()}.}
}
\description{
Performs per-row centering on a numeric matrix
}
\details{
This function centers data by subtracting the median or
mean for each row.

Optionally columns can be grouped using the
argument \code{centerGroups}, which will center
data within each group independently.

Data can be centered relative to specific control columns
using the argument \code{controlSamples}. When used with
\code{centerGroups}, each group of columns defined by
\code{centerGroups} that does not contain a corresponding
value in \code{controlSamples} will be centered using the
entire group.

Confirm the \code{centerGroups} and \code{controlSamples} are
correct using the attribute \code{"center_df"} of the results,
see examples below.

Note: This function assumes input data is log2-transformed,
or appropriately transformed to fit the assumption of
normality. This assumption is necessary for two reasons:
\enumerate{
\item The group value (mean or median) is correct only when
data is transformed so the mean or median is not affected
by skewed data. Alternatively, \code{rowStatsFunc} can be
used to specify a custom group summary function.
\item The centering subtracts the group value from each column
value.
}
}
\examples{
x <- matrix(1:100, ncol=10);
colnames(x) <- letters[1:10];
# basic centering
centerGeneData_new(x);

# grouped centering
centerGeneData_new(x,
   centerGroups=rep(c("A","B"), c(5,5)));

# centering versus specific control columns
centerGeneData_new(x,
   controlSamples=letters[c(1:3)]);

# grouped centering versus specific control columns
centerGeneData_new(x,
   centerGroups=rep(c("A","B"), c(5,5)),
   controlSamples=letters[c(1:3, 6:8)]);

# confirm the centerGroups and controlSamples
x_ctr <- centerGeneData_new(x,
   centerGroups=rep(c("A","B"), c(5,5)),
   controlSamples=letters[c(1:3, 6:8)],
   returnGroups=TRUE);
attr(x_ctr, "center_df");

}
\seealso{
Other jam matrix functions: \code{\link{centerGeneData}},
  \code{\link{jammacalc}}
}
\concept{jam matrix functions}
